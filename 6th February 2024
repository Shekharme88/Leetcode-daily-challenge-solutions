49. Group Anagrams

Given an array of strings strs, group the anagrams together. You can return the answer in any order.

An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.

 

Example 1:

Input: strs = ["eat","tea","tan","ate","nat","bat"]
Output: [["bat"],["nat","tan"],["ate","eat","tea"]]
Example 2:

Input: strs = [""]
Output: [[""]]
Example 3:

Input: strs = ["a"]
Output: [["a"]]
 

Constraints:

1 <= strs.length <= 104
0 <= strs[i].length <= 100
strs[i] consists of lowercase English letters.

Code - 
class Solution {
    public List<List<String>> groupAnagrams(String[] strs) {
        List<List<String>> res=new ArrayList<List<String>>();
        HashMap<String,ArrayList<String>> map=new HashMap<String,ArrayList<String>>();
        for(String s:strs){
            char ch[]=s.toCharArray();
            Arrays.sort(ch);
            String temp=Arrays.toString(ch);
            if(!map.containsKey(temp)){
                map.put(temp,new ArrayList<String>());
                map.get(temp).add(s);
            }
            else
            map.get(temp).add(s);
        }
        for(Map.Entry<String,ArrayList<String>> entry:map.entrySet()){
            res.add(entry.getValue());
        }
        return res;
    }
}
