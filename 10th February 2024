647. Palindromic Substrings

Given a string s, return the number of palindromic substrings in it.

A string is a palindrome when it reads the same backward as forward.

A substring is a contiguous sequence of characters within the string.

 

Example 1:

Input: s = "abc"
Output: 3
Explanation: Three palindromic strings: "a", "b", "c".
Example 2:

Input: s = "aaa"
Output: 6
Explanation: Six palindromic strings: "a", "a", "a", "aa", "aa", "aaa".
 

Constraints:

1 <= s.length <= 1000
s consists of lowercase English letters.

Code-

class Solution {
    public int countSubstrings(String s) {
        int res=0;
        int l=s.length();

        boolean arr[][]=new boolean[l][l];

        for(int i=0;i<l;i++){
            arr[i][i]=true;
            res++;
        }

        for(int i=0;i<l-1;i++){
            if(s.charAt(i)==s.charAt(i+1)){
                arr[i][i+1]=true;
                res++;
            }
            
        }
        for(int i=3;i<=l;i++){
            for(int j=0;j<l-i+1;j++){
                int last=j+i-1;
                if(arr[j+1][last-1] && s.charAt(j)==s.charAt(last)){
                    arr[j][last]=true;
                    res++;
                }
            }
        }

        return res;
        
    }
}
